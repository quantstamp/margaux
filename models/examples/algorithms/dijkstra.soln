Compiling models/examples/algorithms/dijkstra.als...
Compilation successful!
Analyzing command: run Deadlock for 3 expect 1

Solution #1

module alloy/lang/univ
sig univ = {Mutex_0, Mutex_1, Mutex_2, Ord_0, Ord_0, State_0, State_1, State_2}

module examples/algorithms/dijkstra
sig Process extends univ = {}
sig Mutex extends univ = {Mutex_0, Mutex_1, Mutex_2}
sig State extends univ = {State_0, State_1, State_2}
  holds :  ( examples/algorithms/dijkstra/Process) -> ( examples/algorithms/dijkstra/Mutex) = 
    {}
  waits :  ( examples/algorithms/dijkstra/Process) -> ( examples/algorithms/dijkstra/Mutex) = 
    {}

module util/ordering[examples/algorithms/dijkstra/State]
sig Ord extends univ = Ord_0
  first_ :  examples/algorithms/dijkstra/State = 
    {Ord_0 -> State_0}
  last_ :  examples/algorithms/dijkstra/State = 
    {Ord_0 -> State_2}
  next_ :  ( examples/algorithms/dijkstra/State) ->lone ( examples/algorithms/dijkstra/State) = 
    {Ord_0 -> {State_0 -> State_1, State_1 -> State_2}}
  prev_ :  ( examples/algorithms/dijkstra/State) ->lone ( examples/algorithms/dijkstra/State) = 
    {Ord_0 -> {State_1 -> State_0, State_2 -> State_1}}

module util/ordering[examples/algorithms/dijkstra/Mutex]
sig Ord extends univ = Ord_0
  first_ :  examples/algorithms/dijkstra/Mutex = 
    {Ord_0 -> Mutex_0}
  last_ :  examples/algorithms/dijkstra/Mutex = 
    {Ord_0 -> Mutex_2}
  next_ :  ( examples/algorithms/dijkstra/Mutex) ->lone ( examples/algorithms/dijkstra/Mutex) = 
    {Ord_0 -> {Mutex_0 -> Mutex_1, Mutex_1 -> Mutex_2}}
  prev_ :  ( examples/algorithms/dijkstra/Mutex) ->lone ( examples/algorithms/dijkstra/Mutex) = 
    {Ord_0 -> {Mutex_1 -> Mutex_0, Mutex_2 -> Mutex_1}}

skolem constants
Deadlock_s = 
    {State_2}

Analyzing command: run ShowDijkstra for 5 examples/algorithms/dijkstra/State, 2 examples/algorithms/dijkstra/Process, 2 examples/algorithms/dijkstra/Mutex expect 1

Solution #1

module alloy/lang/univ
sig univ = {Mutex_0, Mutex_1, Ord_0, Ord_0, Process_0, Process_1, State_0, State_1, State_2, State_3, State_4}

module examples/algorithms/dijkstra
sig Process extends univ = {Process_0, Process_1}
sig Mutex extends univ = {Mutex_0, Mutex_1}
sig State extends univ = {State_0, State_1, State_2, State_3, State_4}
  holds :  ( examples/algorithms/dijkstra/Process) -> ( examples/algorithms/dijkstra/Mutex) = 
    {State_1 -> Process_0 -> Mutex_0, 
     State_2 -> {Process_0 -> Mutex_0, Process_1 -> Mutex_1}, 
     State_3 -> {Process_0 -> Mutex_0, Process_1 -> Mutex_1}, 
     State_4 -> {Process_0 -> Mutex_0, Process_1 -> Mutex_1}}
  waits :  ( examples/algorithms/dijkstra/Process) -> ( examples/algorithms/dijkstra/Mutex) = 
    {State_3 -> Process_0 -> Mutex_1, 
     State_4 -> {Process_0 -> Mutex_1, Process_1 -> Mutex_0}}

module util/ordering[examples/algorithms/dijkstra/State]
sig Ord extends univ = Ord_0
  first_ :  examples/algorithms/dijkstra/State = 
    {Ord_0 -> State_0}
  last_ :  examples/algorithms/dijkstra/State = 
    {Ord_0 -> State_4}
  next_ :  ( examples/algorithms/dijkstra/State) ->lone ( examples/algorithms/dijkstra/State) = 
    {Ord_0 -> {State_0 -> State_1, State_1 -> State_2, State_2 -> State_3, State_3 -> State_4}}
  prev_ :  ( examples/algorithms/dijkstra/State) ->lone ( examples/algorithms/dijkstra/State) = 
    {Ord_0 -> {State_1 -> State_0, State_2 -> State_1, State_3 -> State_2, State_4 -> State_3}}

module util/ordering[examples/algorithms/dijkstra/Mutex]
sig Ord extends univ = Ord_0
  first_ :  examples/algorithms/dijkstra/Mutex = 
    {Ord_0 -> Mutex_0}
  last_ :  examples/algorithms/dijkstra/Mutex = 
    {Ord_0 -> Mutex_1}
  next_ :  ( examples/algorithms/dijkstra/Mutex) ->lone ( examples/algorithms/dijkstra/Mutex) = 
    {Ord_0 -> Mutex_0 -> Mutex_1}
  prev_ :  ( examples/algorithms/dijkstra/Mutex) ->lone ( examples/algorithms/dijkstra/Mutex) = 
    {Ord_0 -> Mutex_1 -> Mutex_0}

skolem constants
Deadlock_s = 
    {State_4}

Analyzing command: check DijkstraPreventsDeadlocks for 5 examples/algorithms/dijkstra/State, 5 examples/algorithms/dijkstra/Process, 4 examples/algorithms/dijkstra/Mutex expect 0

No solution found.

