Compiling models/examples/toys/railway.als...
Compilation successful!
Analyzing command: check PolicyWorks for 2 examples/toys/railway/Train, 1 examples/toys/railway/GateState, 2 examples/toys/railway/TrainState, 4 examples/toys/railway/Seg expect 1

Solution #1

module alloy/lang/univ
sig univ = {GateState_0, Seg_0, Seg_1, Seg_2, Seg_3, TrainState_0, TrainState_1, Train_0, Train_1}

module examples/toys/railway
sig Seg extends univ = {Seg_0, Seg_1, Seg_2, Seg_3}
  next : set examples/toys/railway/Seg = 
    {Seg_0 -> Seg_1, 
     Seg_2 -> Seg_3}
  overlaps : set examples/toys/railway/Seg = 
    {Seg_0 -> {Seg_0, Seg_1, Seg_3}, 
     Seg_1 -> {Seg_0, Seg_1}, 
     Seg_2 -> Seg_2, 
     Seg_3 -> {Seg_0, Seg_3}}
sig Train extends univ = {Train_0, Train_1}
sig GateState extends univ = {GateState_0}
  closed : set examples/toys/railway/Seg = 
    {GateState_0 -> Seg_0}
sig TrainState extends univ = {TrainState_0, TrainState_1}
  on :  ( examples/toys/railway/Train) ->lone ( examples/toys/railway/Seg) = 
    {TrainState_0 -> {Train_0 -> Seg_2, Train_1 -> Seg_1}, 
     TrainState_1 -> {Train_0 -> Seg_3, Train_1 -> Seg_1}}
  occupied : set examples/toys/railway/Seg = 
    {TrainState_0 -> {Seg_1, Seg_2}, 
     TrainState_1 -> {Seg_1, Seg_3}}

skolem constants
PolicyWorks_x = 
    {TrainState_0}
PolicyWorks_x' = 
    {TrainState_1}
PolicyWorks_g = 
    {GateState_0}
PolicyWorks_ts = 
    {Train_0}
Safe_s = 
    {Seg_0}

Analyzing command: run TrainsMoveLegal for 3 expect 1

Solution #1

module alloy/lang/univ
sig univ = {GateState_0, TrainState_0, Train_0, Train_1, Train_2}

module examples/toys/railway
sig Seg extends univ = {}
  next : set examples/toys/railway/Seg = 
    {}
  overlaps : set examples/toys/railway/Seg = 
    {}
sig Train extends univ = {Train_0, Train_1, Train_2}
sig GateState extends univ = {GateState_0}
  closed : set examples/toys/railway/Seg = 
    {}
sig TrainState extends univ = {TrainState_0}
  on :  ( examples/toys/railway/Train) ->lone ( examples/toys/railway/Seg) = 
    {}
  occupied : set examples/toys/railway/Seg = 
    {}

skolem constants
TrainsMoveLegal_x = 
    {TrainState_0}
TrainsMoveLegal_x' = 
    {TrainState_0}
TrainsMoveLegal_g = 
    {GateState_0}
TrainsMoveLegal_ts = 
    {Train_0, 
     Train_1, 
     Train_2}

